@page "/home"

@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<PageTitle>Home</PageTitle>

<Div Class="d-flex flex-column align-items-center gap-3">
    <h1 class="mb-2">QUIZ</h1>

    <h3 class="my-1">Search for a quiz</h3>

    <EditForm Model="searchWord" OnValidSubmit="OnSearchClick" FormName="LoginForm">
        <Div Class="input-group">
            <InputText placeholder="Search..." class="form-control" type="text"
                       @bind-Value="searchWord.word" />

            <Button Type="ButtonType.Submit" Class="btn btn-primary">Search</Button>
        </Div>
    </EditForm>

    <Div Class="d-flex gap-1">
        @if (userRole == "Teacher")
        {
            <Button Class="btn btn-primary">Create</Button>
        }
        <Button Class="btn btn-primary" Clicked="() => GoToBrowse()">Browse</Button>
    </Div>
</Div>

@code {
    [CascadingParameter(Name = "JWTokenHandler")]
    private JWTokenHandler? jWTokenHandler { get; set; }

    private SearchWord searchWord = new();
    private string userRole = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (jWTokenHandler == null) return;

            string jwt = await jWTokenHandler.GetToken();
            userRole = await sessionStorage.GetItemAsync<string>("userRole");
            if (userRole == "Teacher")
            {
                StateHasChanged();
            }
        }
    }

    private void OnSearchClick()
    {
        GoToBrowse(searchWord.word);
    }

    private void GoToBrowse(string searchWord = "")
    {
        const string navigateTo = "/Browse";
        if (!string.IsNullOrEmpty(searchWord))
        {
            NavigationManager.NavigateTo($"{navigateTo}?search={Uri.EscapeDataString(searchWord)}");
            return;
        }
        NavigationManager.NavigateTo(navigateTo);
    }

    private class SearchWord
    {
        public string word = string.Empty;
    }
}