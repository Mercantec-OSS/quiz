@page "/MyPage"
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<JWTokenHandler @ref="jWTokenHandler" />
<PageTitle>My page</PageTitle>

<Row>
    <Column ColumnSize="ColumnSize.Is10">
        <h1>My Page</h1>

    </Column>
    <Column ColumnSize="ColumnSize.Is2">
        <h2>
            Avg. score:
            @if (quizzesLink == null)
            {
                <span>Loading...</span>
            }
            else
            {
                <span>
                    @(quizzesLink.Count > 0 ? Math.Round(quizzesLink.Where(ql => ql.Completed).Average(ql => ql.Results), 2) : 0)
                </span>
            }
        </h2>
    </Column>
</Row>

@if (quizzesLink == null)
{
    <p>
        Loading...
    </p>
}
else
{
    <Row HorizontalGutter="10" VerticalGutter="10">
        @foreach (User_QuizQuizInfoDTO quizLink in quizzesLink)
        {
            <Column ColumnSize="ColumnSize.Is4">
                <Card>
                    <CardHeader>
                        <Row>
                            <Column ColumnSize="ColumnSize.Is8">
                                <h3 class="card-title">@quizLink.quiz.Title</h3>
                            </Column>
                            <Column ColumnSize="ColumnSize.Is4">
                                <h4 class="text-end">@quizLink.quiz.Creator</h4>
                            </Column>
                        </Row>
                    </CardHeader>
                    <CardBody>
                        <Row>
                            <Column>
                                Category: @quizLink.quiz.Category
                            </Column>
                            <Column>
                                Difficulty: @quizLink.quiz.Difficulty
                            </Column>
                            <Column>
                                @quizLink.Results%
                            </Column>
                        </Row>
                    </CardBody>
                    <CardFooter>
                        @if (!quizLink.Completed)
                        {
                            <Button Class="btn btn-primary w-100"
                                    Clicked="() => Start(quizLink.quiz.ID ?? 0)"
                                    Disabled="@quizLink.Completed">
                                Start
                            </Button>
                        }
                        else
                        {
                            <p class="text-center">Completed</p>
                        }
                    </CardFooter>
                </Card>
            </Column>
        }
    </Row>
}

@code {
    [Inject] public HttpClient? Http { get; set; }
    private JWTokenHandler? jWTokenHandler;
    private List<User_QuizQuizInfoDTO>? quizzesLink = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Http == null) return;
            if (jWTokenHandler == null) return;

            string jwt = await jWTokenHandler.GetToken();
            int id = await sessionStorage.GetItemAsync<int>("userID");

            (HttpStatusCode statusCode, List<User_QuizQuizInfoDTO>? response) =
                await HttpHandler.GetAsync<List<User_QuizQuizInfoDTO>>(
                    $"api/User_Quiz/AllUserQuiz/{id}", jwt, Http);

            if (statusCode == HttpStatusCode.OK)
            {
                quizzesLink = response ?? new();
                StateHasChanged();
            }
        }
    }

    private void Start(int quizID)
    {
        if (quizID == 0)
        {
            return;
        }

        NavigationManager.NavigateTo($"/quiz_ui?quiz_id={Uri.EscapeDataString(quizID.ToString())}");
    }
}
