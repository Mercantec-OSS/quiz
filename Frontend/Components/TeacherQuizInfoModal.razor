<CustomModal Title="@quiz.Title" @ref="modal" size="ModalSize.Large" OnClose="Close">
    <BodyContent>
        <GenericListComponent T="User_QuizUserInfoDTO" Items="usersToQuiz" NoItemsText="No students found assigned to this quiz">
            <BodyContent>
                <Column ColumnSize="ColumnSize.Is6">
                    <Card>
                        <CardHeader>
                            @context.User.username
                        </CardHeader>
                        <CardBody>
                            <Row>
                                <Column ColumnSize="ColumnSize.Is6">
                                    <p class="card-text">Email: @context.User.email</p>
                                </Column>
                                <Column ColumnSize="ColumnSize.Is6">
                                    <p class="card-text">Score: @context.Results</p>
                                </Column>
                            </Row>
                        </CardBody>
                    </Card>
                </Column>
            </BodyContent>
        </GenericListComponent>
    </BodyContent>
</CustomModal>

@code {
    [CascadingParameter(Name = "HttpHandler")]
    private HttpHandler? httpHandler { get; set; }

    [CascadingParameter(Name = "JWTokenHandler")]
    private JWTokenHandler? jWTokenHandler { get; set; }

    [CascadingParameter(Name = "LoadingSpinner")]
    private LoadingSpinner? loading { get; set; }

    private CustomModal? modal;

    private QuizDTO quiz = new();
    private List<User_QuizUserInfoDTO>? usersToQuiz = null;

    public async void Open(QuizDTO quiz)
    {
        if (httpHandler == null) return;
        if (jWTokenHandler == null) return;

        modal?.Show();
        loading?.Start();

        string jwt = await jWTokenHandler.GetToken();
        this.quiz = quiz;

        (HttpStatusCode statusCode, List<User_QuizUserInfoDTO> response) =
           await httpHandler.GetAsync<List<User_QuizUserInfoDTO>>(
               $"/api/User_Quiz/AllStudents/{quiz.ID}", jwt);

        if (statusCode == HttpStatusCode.OK)
        {
            usersToQuiz = response;
            StateHasChanged();
        }

        loading?.Stop();
    }

    private void Close()
    {
        usersToQuiz = null;
        StateHasChanged();
        modal?.Hide();
    }
}
